<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.1 (Python 3.10.0 on win32)" generated="20211025 17:39:18.867" rpa="false" schemaversion="2">
<suite id="s1" name="testsLoja" source="C:\qaninja\robot\api\test\testsLoja.robot">
<kw name="Conectar a minha API" library="resourceLojaApi" type="SETUP">
<kw name="Create Session" library="RequestsLibrary">
<arg>APILojinha</arg>
<arg>${URL_API}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20211025 17:39:19.179" level="INFO">Creating Session using : alias=APILojinha, url=http://165.227.93.41/lojinha, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.179"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.179"/>
</kw>
<test id="s1-t1" name="Cadastrar novo Produto (POST)">
<kw name="Fazer Login na API" library="resourceLojaApi">
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211025 17:39:19.179" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.179"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPOSTA}</var>
<arg>APILojinha</arg>
<arg>/login</arg>
<arg>data=${DADOS_LOGIN}</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20211025 17:39:19.476" level="INFO">POST Request : url=http://165.227.93.41/lojinha/login 
 path_url=/lojinha/login 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '59'} 
 body={"usuariologin": "teste.pedro","usuariosenha" :"Teste@123"} 
 </msg>
<msg timestamp="20211025 17:39:19.476" level="INFO">POST Response : url=http://165.227.93.41/lojinha/login 
 status=200, reason=OK 
 headers={'Date': 'Mon, 25 Oct 2021 20:39:18 GMT', 'Server': 'Apache/2.4.29 (Ubuntu)', 'Content-Length': '257', 'Keep-Alive': 'timeout=5, max=100', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json'} 
 body={"data":{"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk"},"message":"Sucesso ao realizar o login","error":""} 
 </msg>
<msg timestamp="20211025 17:39:19.476" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.476"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${TOKEN}</var>
<arg>${RESPOSTA.json()["data"]}</arg>
<arg>token</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20211025 17:39:19.476" level="INFO">${TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk</msg>
<status status="PASS" starttime="20211025 17:39:19.476" endtime="20211025 17:39:19.476"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TOKEN}</arg>
<arg>${TOKEN}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 17:39:19.476" level="INFO">${TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk</msg>
<status status="PASS" starttime="20211025 17:39:19.476" endtime="20211025 17:39:19.476"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.476"/>
</kw>
<kw name="Cadastrar novo Produto" library="resourceLojaApi">
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>content-type=application/json</arg>
<arg>token=${TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211025 17:39:19.476" level="INFO">${HEADERS} = {'content-type': 'application/json', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSf...</msg>
<status status="PASS" starttime="20211025 17:39:19.476" endtime="20211025 17:39:19.476"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPOSTA_POST}</var>
<arg>APILojinha</arg>
<arg>/produto</arg>
<arg>data=${NOVO_PRODUTO}</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20211025 17:39:19.617" level="INFO">POST Request : url=http://165.227.93.41/lojinha/produto 
 path_url=/lojinha/produto 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk', 'Content-Length': '163'} 
 body={"produtonome": "Coca-Cola", "produtovalor": 5.00, "produtocores": [ "Vermelho" ], "componentes":[{ "componentenome": "Refrigerante", "componentequantidade": 10}]} 
 </msg>
<msg timestamp="20211025 17:39:19.617" level="INFO">POST Response : url=http://165.227.93.41/lojinha/produto 
 status=201, reason=Created 
 headers={'Date': 'Mon, 25 Oct 2021 20:39:18 GMT', 'Server': 'Apache/2.4.29 (Ubuntu)', 'Content-Length': '250', 'Keep-Alive': 'timeout=5, max=99', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json'} 
 body={"data":{"produtoid":39716,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44938,"componentenome":"Refrigerante","componentequantidade":10}]},"message":"Produto adicionado com sucesso","error":""} 
 </msg>
<msg timestamp="20211025 17:39:19.617" level="INFO">${RESPOSTA_POST} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.476" endtime="20211025 17:39:19.617"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA_POST}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20211025 17:39:19.617" level="INFO">${RESPOSTA_POST} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.617" endtime="20211025 17:39:19.617"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.476" endtime="20211025 17:39:19.617"/>
</kw>
<kw name="Conferir mensagem POST &quot;Produto adicionado com sucesso&quot;" library="resourceLojaApi" sourcename="Conferir mensagem POST &quot;${MENSAGEM}&quot;">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_POST.json()["message"]}</arg>
<arg>${MENSAGEM}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211025 17:39:19.617" endtime="20211025 17:39:19.617"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA_POST.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 17:39:19.632" level="INFO">Produto adicionado com sucesso</msg>
<status status="PASS" starttime="20211025 17:39:19.617" endtime="20211025 17:39:19.632"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.617" endtime="20211025 17:39:19.632"/>
</kw>
<kw name="Conferir se retorna todos os dados cadastrados para o novo produto" library="resourceLojaApi">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${RESPOSTA_POST.json()}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20211025 17:39:19.632" level="INFO">Length is 3</msg>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.632"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.632"/>
</kw>
<kw name="Conferir status code POST" library="resourceLojaApi">
<arg>201</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_POST.status_code}</arg>
<arg>${STATUSCODE_DESEJADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211025 17:39:19.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.632"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.632"/>
</kw>
<tag>POST</tag>
<status status="PASS" starttime="20211025 17:39:19.179" endtime="20211025 17:39:19.632"/>
</test>
<test id="s1-t2" name="Conferir lista de Produtos (GET)">
<kw name="Fazer Login na API" library="resourceLojaApi">
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>content-type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211025 17:39:19.632" level="INFO">${HEADERS} = {'content-type': 'application/json'}</msg>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.632"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${RESPOSTA}</var>
<arg>APILojinha</arg>
<arg>/login</arg>
<arg>data=${DADOS_LOGIN}</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20211025 17:39:19.773" level="INFO">POST Request : url=http://165.227.93.41/lojinha/login 
 path_url=/lojinha/login 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'content-type': 'application/json', 'Content-Length': '59'} 
 body={"usuariologin": "teste.pedro","usuariosenha" :"Teste@123"} 
 </msg>
<msg timestamp="20211025 17:39:19.773" level="INFO">POST Response : url=http://165.227.93.41/lojinha/login 
 status=200, reason=OK 
 headers={'Date': 'Mon, 25 Oct 2021 20:39:18 GMT', 'Server': 'Apache/2.4.29 (Ubuntu)', 'Content-Length': '257', 'Keep-Alive': 'timeout=5, max=98', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json'} 
 body={"data":{"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk"},"message":"Sucesso ao realizar o login","error":""} 
 </msg>
<msg timestamp="20211025 17:39:19.773" level="INFO">${RESPOSTA} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.773"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${TOKEN}</var>
<arg>${RESPOSTA.json()["data"]}</arg>
<arg>token</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20211025 17:39:19.773" level="INFO">${TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk</msg>
<status status="PASS" starttime="20211025 17:39:19.773" endtime="20211025 17:39:19.773"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TOKEN}</arg>
<arg>${TOKEN}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20211025 17:39:19.773" level="INFO">${TOKEN} = eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk</msg>
<status status="PASS" starttime="20211025 17:39:19.773" endtime="20211025 17:39:19.773"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.773"/>
</kw>
<kw name="Buscar lista de Produtos" library="resourceLojaApi">
<kw name="Create Dictionary" library="BuiltIn">
<var>${HEADERS}</var>
<arg>token=${TOKEN}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20211025 17:39:19.773" level="INFO">${HEADERS} = {'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk'}</msg>
<status status="PASS" starttime="20211025 17:39:19.773" endtime="20211025 17:39:19.773"/>
</kw>
<kw name="GET On Session" library="RequestsLibrary">
<var>${RESPOSTA_GET}</var>
<arg>APILojinha</arg>
<arg>/produto</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<msg timestamp="20211025 17:39:19.914" level="INFO">GET Request : url=http://165.227.93.41/lojinha/produto 
 path_url=/lojinha/produto 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'token': 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c3VhcmlvaWQiOiIxMDM1NyIsInVzdWFyaW9sb2dpbiI6InRlc3RlLnBlZHJvIiwidXN1YXJpb25vbWUiOiJUZXN0ZSBQZWRybyJ9.hHdAapNrQSfCEBUQs-ib-51hnBPuHZlWETp661GtMKk'} 
 body=None 
 </msg>
<msg timestamp="20211025 17:39:19.914" level="INFO">GET Response : url=http://165.227.93.41/lojinha/produto 
 status=200, reason=OK 
 headers={'Date': 'Mon, 25 Oct 2021 20:39:18 GMT', 'Server': 'Apache/2.4.29 (Ubuntu)', 'Content-Length': '3675', 'Keep-Alive': 'timeout=5, max=97', 'Connection': 'Keep-Alive', 'Content-Type': 'application/json'} 
 body={"data":[{"produtoid":39683,"produtonome":"robot1","produtovalor":10,"produtocores":["laranja"],"componentes":[{"componenteid":44894,"componentenome":"Framework","componentequantidade":10}]},{"produtoid":39686,"produtonome":"robot\u00e2\u0082\u00a21","produtovalor":10,"produtocores":["laranja"],"componentes":[{"componenteid":44906,"componentenome":"Framework","componentequantidade":10}]},{"produtoid":39687,"produtonome":"robot\u00e2\u0082\u00a21","produtovalor":10,"produtocores":["laranja"],"componentes":[{"componenteid":44907,"componentenome":"Framework","componentequantidade":10}]},{"produtoid":39688,"produtonome":"robot\u00e2\u0082\u00a21","produtovalor":10,"produtocores":["laranja"],"componentes":[{"componenteid":44908,"componentenome":"Framework","componentequantidade":10}]},{"produtoid":39689,"produtonome":"robot1321","produtovalor":10,"produtocores":["laranja"],"componentes":[{"componenteid":44909,"componentenome":"Framework","componentequantidade":10}]},{"produtoid":39690,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44910,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39691,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44911,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39692,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44912,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39694,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44916,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39696,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44920,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39697,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44921,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39698,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44922,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39699,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44923,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39704,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44930,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39705,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44931,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39706,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44932,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39713,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44936,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39715,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44937,"componentenome":"Refrigerante","componentequantidade":10}]},{"produtoid":39716,"produtonome":"Coca-Cola","produtovalor":5,"produtocores":["Vermelho"],"componentes":[{"componenteid":44938,"componentenome":"Refrigerante","componentequantidade":10}]}],"message":"Listagem de produtos realizada com sucesso","error":""} 
 </msg>
<msg timestamp="20211025 17:39:19.914" level="INFO">${RESPOSTA_GET} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.773" endtime="20211025 17:39:19.914"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${RESPOSTA_GET}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20211025 17:39:19.914" level="INFO">${RESPOSTA_GET} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.914" endtime="20211025 17:39:19.914"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.773" endtime="20211025 17:39:19.914"/>
</kw>
<kw name="Conferir status code" library="resourceLojaApi">
<arg>200</arg>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_GET.status_code}</arg>
<arg>${STATUSCODE_DESEJADO}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20211025 17:39:19.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211025 17:39:19.929" endtime="20211025 17:39:19.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA_GET.status_code}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 17:39:19.929" level="INFO">200</msg>
<status status="PASS" starttime="20211025 17:39:19.929" endtime="20211025 17:39:19.929"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.914" endtime="20211025 17:39:19.929"/>
</kw>
<kw name="Conferir mensagem GET &quot;Listagem de produtos realizada com sucesso&quot;" library="resourceLojaApi" sourcename="Conferir mensagem GET &quot;${MENSAGEM}&quot;">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${RESPOSTA_GET.json()["message"]}</arg>
<arg>${MENSAGEM}</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" starttime="20211025 17:39:19.929" endtime="20211025 17:39:19.929"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${RESPOSTA_GET.json()["message"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20211025 17:39:19.929" level="INFO">Listagem de produtos realizada com sucesso</msg>
<status status="PASS" starttime="20211025 17:39:19.929" endtime="20211025 17:39:19.929"/>
</kw>
<status status="PASS" starttime="20211025 17:39:19.929" endtime="20211025 17:39:19.929"/>
</kw>
<tag>GET</tag>
<status status="PASS" starttime="20211025 17:39:19.632" endtime="20211025 17:39:19.929"/>
</test>
<doc>Documentacao da API: http://165.227.93.41/lojinha-arquivos/Swagger.pdf</doc>
<status status="PASS" starttime="20211025 17:39:18.867" endtime="20211025 17:39:19.929"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">GET</stat>
<stat pass="1" fail="0" skip="0">POST</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="testsLoja">testsLoja</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
